
; seekle here

seekle:
	;mov bx, word [CURRENT_DEPTH]
	;dec bx
	;sub bx, ax
	;mov ax, bx
	
	mov ebx, CURRENT_RECORD

	loople:
		cmp ax, 0
		je endle

		dec ax
		mov bx, [bx + 2]        ; set the record counter to the current record's definition record (parent)
		jmp loople

	endle:
		push_operand [bx + 4]  ; push the value of the actual parameter stored in the obtained record.
		
		;pusha
		;mov bx, [bx + 4]
		;call print_dec
		;popa
		
		cmp [bx + 6], word 0
		je veryendle
		push_operand [bx + 6]
	veryendle:
	ret
	
	
printle:
	mov ebx, CURRENT_RECORD

	priple:
		cmp ax, 0
		je prindle

		dec ax
		mov bx, [bx + 2]        ; set the record counter to the current record's definition record (parent)
		jmp priple

	prindle:
		pusha
		mov bx, [bx + 4]
		call print_dec
		popa
	ret


%include"./utils/print_string.asm"
%include"./utils/print_dec.asm"

;print_number:
	;pop_env bx
	;push_operand bx
	;call print_dec
	;ret

STAGING:
	db "Separation Confirmed.", 0x0A, 0x0D, 0x00

HERE_STRING:
	db "Here!", 0x0A, 0x0D, 0x00
	
END_STRING:
	db "End.", 0x0A, 0x0D, 0x00

FUN_STRING:
	db "Fun: ", 0x00
	
PAR_STRING:
	db "Par: ", 0x00
	
REC_STRING:
	db "Rec: ", 0x00

OP_STRING:
	db "Op: ", 0x00
	
NEW_LINE:
	db 0x0A, 0x0D, 0x00
	
times 16384-($-$$) db 0x00
